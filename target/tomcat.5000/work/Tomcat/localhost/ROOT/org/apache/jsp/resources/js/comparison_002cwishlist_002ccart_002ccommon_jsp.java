/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2016-08-31 19:05:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.js;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class comparison_002cwishlist_002ccart_002ccommon_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/javascript; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        $(document).ready(function () {\r\n");
      out.write("            if(localStorage.comparedIdStr != null && localStorage.comparedIdStr != \"\" ) {\r\n");
      out.write("                loadStyledCompareItems();\r\n");
      out.write("            }\r\n");
      out.write("            styleCompareValue();\r\n");
      out.write("            createPopovers();\r\n");
      out.write("            if(localStorage.wishListIdStr != null && localStorage.wishListIdStr != \"\" ) {\r\n");
      out.write("                loadStyledWishListItems();\r\n");
      out.write("            }\r\n");
      out.write("            styleWishListValue();\r\n");
      out.write("            if(localStorage.cartItemStr != null && localStorage.cartItemStr != \"\" ) {\r\n");
      out.write("                loadStyledCartItems();\r\n");
      out.write("                styleCounts();\r\n");
      out.write("                loadBasketDropdown();\r\n");
      out.write("            } else {\r\n");
      out.write("                localStorage.cartTotal = \"0\";\r\n");
      out.write("                localStorage.cartCount = \"0\";\r\n");
      out.write("                $(\".checkout-btn\").addClass(\"hidden\");\r\n");
      out.write("                $(\".checkout-btn-inverse\").removeClass(\"hidden\");\r\n");
      out.write("            }\r\n");
      out.write("            styleCartValue();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function styleValue(arr,id){\r\n");
      out.write("            $(id).text( arr != null && arr != \"\" ? '('+arr.split(',').length+')' : '' );\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function goTo(href,arr) {\r\n");
      out.write("            if (arr != null && arr != \"\") {\r\n");
      out.write("                window.location.href = href + \"?itemsId=\" + arr;\r\n");
      out.write("            } else {\r\n");
      out.write("                window.location.href = href;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function removeFromArr(arrStr,productId) {\r\n");
      out.write("            var arr = arrStr.split(',');\r\n");
      out.write("            arr = $.grep(arr, function (value) {\r\n");
      out.write("                return value != productId;\r\n");
      out.write("            });\r\n");
      out.write("            return (arr.length != 0) ? arr.join() : \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function loadStyledCompareItems(){\r\n");
      out.write("            var comparedIdArr = localStorage.comparedIdStr.split(',');\r\n");
      out.write("            $(comparedIdArr).each(function(index,value){\r\n");
      out.write("                styleComparisonButton(value);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function styleCompareValue(){\r\n");
      out.write("            styleValue(localStorage.comparedIdStr,'#compare-value');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function addToComparison(productId) {\r\n");
      out.write("            var comparedIdArr = [];\r\n");
      out.write("            if (localStorage.comparedIdStr != null && localStorage.comparedIdStr != \"\") {\r\n");
      out.write("                comparedIdArr = localStorage.comparedIdStr.split(',');\r\n");
      out.write("            }\r\n");
      out.write("            if (comparedIdArr.length < 4) {\r\n");
      out.write("                comparedIdArr.push(productId);\r\n");
      out.write("                localStorage.comparedIdStr = comparedIdArr.join();\r\n");
      out.write("                styleComparisonButton(productId);\r\n");
      out.write("                styleCompareValue();\r\n");
      out.write("            } else {\r\n");
      out.write("                $(\"#compare\"+productId).popover('show');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function removeFromComparison(productId) {\r\n");
      out.write("            localStorage.comparedIdStr = removeFromArr(localStorage.comparedIdStr,productId);\r\n");
      out.write("            styleComparisonButton(productId);\r\n");
      out.write("            styleCompareValue();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function styleComparisonButton(productId) {\r\n");
      out.write("            var thisSpan = $(\".compare\"+productId);\r\n");
      out.write("            thisSpan.toggleClass(\"hidden\");\r\n");
      out.write("            styleCompareValue();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function createPopovers() {\r\n");
      out.write("            var popoverItem = $(\".btn-add-to-compare\");\r\n");
      out.write("            popoverItem.popover({\r\n");
      out.write("                placement: 'auto right',\r\n");
      out.write("                trigger: 'manual',\r\n");
      out.write("                html: true,\r\n");
      out.write("                content: '<b>You may compare up to 4 items at a time</b><br><br>' +\r\n");
      out.write("                        'Would you like to compare the first 4 items you have selected?<br><br>' +\r\n");
      out.write("                        '<a href=\"#\" onclick=\"goToComparison()\">Yes, go to compare</a>'\r\n");
      out.write("            });\r\n");
      out.write("            popoverItem.on('shown.bs.popover', function () {\r\n");
      out.write("                setTimeout(function () {\r\n");
      out.write("                    popoverItem.popover('hide');\r\n");
      out.write("                }, 3500);\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function loadStyledWishListItems(){\r\n");
      out.write("            var wishListIdArr = localStorage.wishListIdStr.split(',');\r\n");
      out.write("            $(wishListIdArr).each(function(index,value){\r\n");
      out.write("                styleWishListButton(value);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function styleWishListValue(){\r\n");
      out.write("            styleValue(localStorage.wishListIdStr,'#wishList-value');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function addToWishList(productId) {\r\n");
      out.write("            var wishListIdArr = [];\r\n");
      out.write("            if (localStorage.wishListIdStr != null && localStorage.wishListIdStr != \"\") {\r\n");
      out.write("                wishListIdArr = localStorage.wishListIdStr.split(',');\r\n");
      out.write("            }\r\n");
      out.write("            wishListIdArr.push(productId);\r\n");
      out.write("            localStorage.wishListIdStr = wishListIdArr.join();\r\n");
      out.write("            styleWishListButton(productId);\r\n");
      out.write("            styleWishListValue();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function removeFromWishListAndReloadPage(productId) {\r\n");
      out.write("            localStorage.wishListIdStr = removeFromArr(localStorage.wishListIdStr, productId);\r\n");
      out.write("            goToWishList();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function removeFromWishList(productId) {\r\n");
      out.write("            localStorage.wishListIdStr = removeFromArr(localStorage.wishListIdStr,productId);\r\n");
      out.write("            styleWishListButton(productId);\r\n");
      out.write("            styleWishListValue();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function styleWishListButton(productId) {\r\n");
      out.write("            var thisSpan = $(\".wishList\"+productId);\r\n");
      out.write("            thisSpan.toggleClass(\"hidden\");\r\n");
      out.write("            styleWishListValue();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function loadStyledCartItems(){\r\n");
      out.write("            var cartItemArr = localStorage.cartItemStr.split(';');\r\n");
      out.write("            $(cartItemArr).each(function(index,value){\r\n");
      out.write("                var productId = value.split(',')[0];\r\n");
      out.write("                styleCartButton(productId);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function styleCartValue(){\r\n");
      out.write("            var count = localStorage.cartCount.toString();\r\n");
      out.write("            $('#cart-count').text(count > 0 ? count : \"\");\r\n");
      out.write("            $('.cart-total').text(localStorage.cartTotal.toString());\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function getArrOfId(fullStr) {\r\n");
      out.write("            var fullArr = fullStr.split(';');\r\n");
      out.write("            if(fullArr != null && fullArr != \"\") {\r\n");
      out.write("                var arrOfId = \"\";\r\n");
      out.write("                $(fullArr).each(function (index,value) {\r\n");
      out.write("                    var productId = value.split(',')[0];\r\n");
      out.write("                    arrOfId += productId + \",\";\r\n");
      out.write("                });\r\n");
      out.write("                arrOfId = arrOfId.substring(0,arrOfId.length - 1);\r\n");
      out.write("            }\r\n");
      out.write("            return arrOfId;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function addToCart(productId) {\r\n");
      out.write("            var cartItemArr = [];\r\n");
      out.write("            if (localStorage.cartItemStr != null && localStorage.cartItemStr != \"\") {\r\n");
      out.write("                cartItemArr = localStorage.cartItemStr.split(';');\r\n");
      out.write("            }\r\n");
      out.write("            var price = $('.price'+productId).first().text();\r\n");
      out.write("            var photo = $('.photo'+productId).first().text();\r\n");
      out.write("            var model = $('.model'+productId).first().text();\r\n");
      out.write("            var brand = $('.brand'+productId).first().text();\r\n");
      out.write("            cartItemArr.push(productId+\",\"+price+\",1,\"+photo+\",\"+model+\",\"+brand);\r\n");
      out.write("            localStorage.cartItemStr = cartItemArr.join(\";\");\r\n");
      out.write("            localStorage.cartTotal = (parseInt(localStorage.cartTotal) + parseInt(price)).toString();\r\n");
      out.write("            localStorage.cartCount = (parseInt(localStorage.cartCount) + 1).toString();\r\n");
      out.write("            styleCartButton(productId);\r\n");
      out.write("            styleCartValue();\r\n");
      out.write("            loadBasketDropdown();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function removeFromCart(productId) {\r\n");
      out.write("            var arr = localStorage.cartItemStr.split(';');\r\n");
      out.write("            var item;\r\n");
      out.write("            $.each(arr,function(index,value){\r\n");
      out.write("                if(value.split(',')[0] == productId) {\r\n");
      out.write("                    item = value;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            arr = $.grep(arr, function (value) {\r\n");
      out.write("                return value != item;\r\n");
      out.write("            });\r\n");
      out.write("            localStorage.cartItemStr = (arr.length != 0) ? arr.join(\";\") : \"\";\r\n");
      out.write("            var price = item.split(',')[1];\r\n");
      out.write("            var count = item.split(',')[2];\r\n");
      out.write("            localStorage.cartTotal = (parseInt(localStorage.cartTotal) - price * count).toString();\r\n");
      out.write("            localStorage.cartCount = (parseInt(localStorage.cartCount) - count).toString();\r\n");
      out.write("            styleCartButton(productId);\r\n");
      out.write("            styleCartValue();\r\n");
      out.write("            loadBasketDropdown();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function styleCounts() {\r\n");
      out.write("            var arr = localStorage.cartItemStr.split(';');\r\n");
      out.write("            $.each(arr,function(index,value){\r\n");
      out.write("                var item = value.split(',');\r\n");
      out.write("                $(\".count\"+item[0]).val(item[2]);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function styleCartButton(productId) {\r\n");
      out.write("            var thisSpan = $(\".cart\"+productId);\r\n");
      out.write("            thisSpan.toggleClass(\"hidden\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function minusFromCart(productId) {\r\n");
      out.write("            var arr = localStorage.cartItemStr.split(';');\r\n");
      out.write("            var changed = false;\r\n");
      out.write("            var price;\r\n");
      out.write("            var count;\r\n");
      out.write("            for(var i=0; !changed && i<arr.length; ++i) {\r\n");
      out.write("                if(arr[i].split(',')[0] == productId) {\r\n");
      out.write("                    var item = arr[i].split(',');\r\n");
      out.write("                    price = parseInt(item[1]);\r\n");
      out.write("                    count = item[2];\r\n");
      out.write("                    --count;\r\n");
      out.write("                    if(count < 1) {\r\n");
      out.write("                        arr = $.grep(arr, function (value) {\r\n");
      out.write("                            return value != item;\r\n");
      out.write("                        });\r\n");
      out.write("                    } else {\r\n");
      out.write("                        arr[i] = item[0]+','+item[1]+','+count+','+item[3]+','+item[4]+','+item[5];\r\n");
      out.write("                    }\r\n");
      out.write("                    changed = true;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            localStorage.cartItemStr = (arr.length != 0) ? arr.join(\";\") : \"\";\r\n");
      out.write("            localStorage.cartTotal = (parseInt(localStorage.cartTotal) - price).toString();\r\n");
      out.write("            localStorage.cartCount = (parseInt(localStorage.cartCount) - 1).toString();\r\n");
      out.write("            styleCartValue();\r\n");
      out.write("            if(count < 1) {\r\n");
      out.write("                goToCart();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function plusToCart(productId) {\r\n");
      out.write("            var arr = localStorage.cartItemStr.split(';');\r\n");
      out.write("            var changed = false;\r\n");
      out.write("            var price;\r\n");
      out.write("            for(var i=0; !changed && i<arr.length; ++i) {\r\n");
      out.write("                if(arr[i].split(',')[0] == productId) {\r\n");
      out.write("                    var item = arr[i].split(',');\r\n");
      out.write("                    price = parseInt(item[1]);\r\n");
      out.write("                    var count = item[2];\r\n");
      out.write("                    ++count;\r\n");
      out.write("                    arr[i] = item[0]+','+item[1]+','+count+','+item[3]+','+item[4]+','+item[5];\r\n");
      out.write("                    changed = true;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            localStorage.cartItemStr = (arr.length != 0) ? arr.join(\";\") : \"\";\r\n");
      out.write("            localStorage.cartTotal = (parseInt(localStorage.cartTotal) + price).toString();\r\n");
      out.write("            localStorage.cartCount = (parseInt(localStorage.cartCount) + 1).toString();\r\n");
      out.write("            styleCartValue();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function loadBasketDropdown(){\r\n");
      out.write("            if(localStorage.cartItemStr != null && localStorage.cartItemStr != \"\") {\r\n");
      out.write("                var arr = localStorage.cartItemStr.split(';');\r\n");
      out.write("                for (var i = 0; i < 3; ++i) {\r\n");
      out.write("                    if (i < arr.length) {\r\n");
      out.write("                        var machine = arr[i].split(',');\r\n");
      out.write("                        $(\"#li\" + (i + 1)).removeClass(\"hidden\");\r\n");
      out.write("                        $(\"#li\" + (i + 1) + \" img\").attr(\"src\", \"../resources/images/products/\" + machine[3]);\r\n");
      out.write("                        $(\"#li\" + (i + 1) + \" img\").attr(\"alt\", machine[4]);\r\n");
      out.write("                        $(\"#li\" + (i + 1) + \" .title\").html(machine[4] + '<br>' + machine[5]);\r\n");
      out.write("                        $(\"#li\" + (i + 1) + \" .price\").text(\"$\" + machine[1] + \".00\");\r\n");
      out.write("                        $(\"#li\" + (i + 1) + \" .close-btn\").click(function () {\r\n");
      out.write("                            removeFromCart(machine[0]);\r\n");
      out.write("                        });\r\n");
      out.write("                    } else {\r\n");
      out.write("                        $(\"#li\" + (i + 1)).addClass(\"hidden\");\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                $(\".checkout-btn\").removeClass(\"hidden\");\r\n");
      out.write("                $(\".checkout-btn-inverse\").addClass(\"hidden\");\r\n");
      out.write("            } else {\r\n");
      out.write("                $(\"#li1\").addClass(\"hidden\");\r\n");
      out.write("                $(\"#li2\").addClass(\"hidden\");\r\n");
      out.write("                $(\"#li3\").addClass(\"hidden\");\r\n");
      out.write("                $(\".checkout-btn\").addClass(\"hidden\");\r\n");
      out.write("                $(\".checkout-btn-inverse\").removeClass(\"hidden\");\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function toEmptyTheCart() {\r\n");
      out.write("            localStorage.cartItemStr = \"\";\r\n");
      out.write("            localStorage.cartTotal = \"0\";\r\n");
      out.write("            localStorage.cartCount = \"0\";\r\n");
      out.write("            styleCartValue();\r\n");
      out.write("            loadBasketDropdown();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function goToProposal() {\r\n");
      out.write("            var arrOfId = getArrOfId(localStorage.cartItemStr);\r\n");
      out.write("            goTo(\"/hmc/proposal\",arrOfId);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function goToCheckout() {\r\n");
      out.write("            var arrOfId = getArrOfId(localStorage.cartItemStr);\r\n");
      out.write("            goTo(\"/hmc/checkout\",arrOfId);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function goToComparison() {\r\n");
      out.write("            goTo(\"/hmc/compare\",localStorage.comparedIdStr);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function goToWishList() {\r\n");
      out.write("            goTo(\"/hmc/wishList\",localStorage.wishListIdStr);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function goToCart() {\r\n");
      out.write("            var arrOfId = getArrOfId(localStorage.cartItemStr);\r\n");
      out.write("            goTo(\"/hmc/cart\",arrOfId);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function goToHmc() {\r\n");
      out.write("            var url = \"\";\r\n");
      out.write("            var arr = [sessionStorage.slidersUrl, sessionStorage.checkboxesUrl, sessionStorage.perPageUrl];\r\n");
      out.write("            arr = $.grep(arr, function(value){\r\n");
      out.write("                return value != null && value != \"\";\r\n");
      out.write("            });\r\n");
      out.write("            url = arr.join(\"&\");\r\n");
      out.write("            url = \"/hmc\" + (url != \"\" ? (\"?\" + url) : \"\")\r\n");
      out.write("            window.location.href = url;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function goToPlywood() {\r\n");
      out.write("            var url = \"\";\r\n");
      out.write("            var arr = [sessionStorage.slidersUrl, sessionStorage.checkboxesUrl, sessionStorage.perPageUrl];\r\n");
      out.write("            arr = $.grep(arr, function(value){\r\n");
      out.write("                return value != null && value != \"\";\r\n");
      out.write("            });\r\n");
      out.write("            url = arr.join(\"&\");\r\n");
      out.write("            url = \"/plywood\" + (url != \"\" ? (\"?\" + url) : \"\")\r\n");
      out.write("            window.location.href = url;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
